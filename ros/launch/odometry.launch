<?xml version="1.0"?>
<!-- 
  GenZ-ICP启动文件
  坐标系说明:
  - mavros_odom_frame: 默认为"odom_mav"，MAVROS发布的里程计坐标系，使用ENU坐标系
  - odom_frame: 默认为"odom"，GenZ-ICP发布里程计的坐标系，使用ENU坐标系
  - base_frame: 默认为"base_link"，机器人基座坐标系，使用ENU坐标系
  - lidar_frame: 默认为"rslidar"，激光雷达坐标系，跟随base_link使用ENU坐标系

  TF树结构:
  odom_mav -> odom -> base_link -> rslidar
-->
<launch>
  <!-- ROS paramaters -->
  <arg name="bagfile" default=""/>
  <arg name="topic" default="/rslidar_points"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="mavros_odom_frame" default="odom_mav"/>
  <arg name="base_frame" default="base_link"/>
  <arg name="lidar_frame" default="rslidar"/>
  <arg name="publish_odom_tf" default="true"/>
  <arg name="visualize" default="true"/>

  <!-- GenZ-ICP parameter sets -->
  <arg name="config_file" default="corridor.yaml"/>
  <arg name="deskew" default="true"/>
  <arg name="use_px4_pose_for_deskew" default="true"/>
  <arg name="use_px4_pose_for_init" default="true"/>
  <arg name="use_px4_pose_for_map" default="false"/>
  <arg name="publish_odom_to_px4" default="true"/>
  <arg name="max_range" default="100.0"/>
  <arg name="min_range" default="0.3"/>
  <arg name="voxel_size" default="0.1"/>
  <arg name="map_cleanup_radius" default=""/>
  <arg name="desired_num_voxelized_points" default="2000"/>
  <arg name="planarity_threshold" default="0.2"/>
  <arg name="max_points_per_voxel" default="1"/>
  <arg name="initial_threshold" default="2.0"/>
  <arg name="min_motion_th" default="0.1"/>
  <arg name="max_num_iterations" default="100"/>
  <arg name="convergence_criterion" default="0.0001"/>

  <!-- Launch MAVROS -->
  <include file="$(find mavros)/launch/px4.launch">
    <arg name="fcu_url" value="/dev/ttyACM0:921600"/>
  </include>
  
  <!-- 设置 MAVROS 坐标系参数 -->
  <param name="/mavros/local_position/frame_id" value="odom"/>
  <param name="/mavros/local_position/tf/send" value="false"/>
  <param name="/mavros/local_position/tf/frame_id" value="odom"/>
  <param name="/mavros/local_position/tf/child_frame_id" value="base_link"/>
  <param name="/mavros/local_position/tf/send_fcu" value="false"/>

  <!-- Launch RSLIDAR SDK -->
  <include file="$(find rslidar_sdk)/launch/start.launch"/>
  
  <!-- 添加LiDAR到base_link的静态变换 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="lidar_to_base_link" 
        args="0 0 0 0 0 0 $(arg base_frame) $(arg lidar_frame)" />
        
  <!-- 添加odom_mav到odom的静态变换 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom" 
        args="0 0 0 0 0 0 $(arg mavros_odom_frame) $(arg odom_frame)" />

  <!-- Odometry node -->
  <node pkg="genz_icp" type="odometry_node" name="odometry_node" output="screen">
    <!-- ROS params -->
    <remap from="pointcloud_topic" to="$(arg topic)"/>
    <param name="odom_frame" value="$(arg odom_frame)"/>
    <param name="mavros_odom_frame" value="$(arg mavros_odom_frame)"/>
    <param name="base_frame" value="$(arg base_frame)"/>
    <param name="lidar_frame" value="$(arg lidar_frame)"/>
    <param name="publish_odom_tf" value="$(arg publish_odom_tf)"/>
    <param name="visualize" value="$(arg visualize)"/>
    
    <!-- Conditional Parameter Loading -->
    <!-- Load parameters from config file if provided -->
    <rosparam if="$(eval config_file != '')" command="load" file="$(find genz_icp)/config/$(arg config_file)"/>
    
    <!-- Load parameters directly if config_file is empty -->
    <param if="$(eval config_file == '')" name="deskew" value="$(arg deskew)"/>
    <param if="$(eval config_file == '')" name="use_px4_pose_for_deskew" value="$(arg use_px4_pose_for_deskew)"/>
    <param if="$(eval config_file == '')" name="use_px4_pose_for_init" value="$(arg use_px4_pose_for_init)"/>
    <param if="$(eval config_file == '')" name="use_px4_pose_for_map" value="$(arg use_px4_pose_for_map)"/>
    <param if="$(eval config_file == '')" name="publish_odom_to_px4" value="$(arg publish_odom_to_px4)"/>
    <param if="$(eval config_file == '')" name="max_range" value="$(arg max_range)"/>
    <param if="$(eval config_file == '')" name="min_range" value="$(arg min_range)"/>
    <param if="$(eval config_file == '')" name="voxel_size" value="$(arg voxel_size)"/>
    <param if="$(eval config_file == '')" name="map_cleanup_radius" value="$(arg map_cleanup_radius)"/>
    <param if="$(eval config_file == '')" name="desired_num_voxelized_points" value="$(arg desired_num_voxelized_points)"/>
    <param if="$(eval config_file == '')" name="planarity_threshold" value="$(arg planarity_threshold)"/>
    <param if="$(eval config_file == '')" name="max_points_per_voxel" value="$(arg max_points_per_voxel)"/>
    <param if="$(eval config_file == '')" name="initial_threshold" value="$(arg initial_threshold)"/>
    <param if="$(eval config_file == '')" name="min_motion_th" value="$(arg min_motion_th)"/>
    <param if="$(eval config_file == '')" name="max_num_iterations" value="$(arg max_num_iterations)"/>
    <param if="$(eval config_file == '')" name="convergence_criterion" value="$(arg convergence_criterion)"/>
  </node>

  <!-- Rosbag player, if bagfile argument was specified -->
  <group if="$(eval bagfile != '')">
    <node pkg="rosbag" type="play" name="player" args="$(arg bagfile)" output="screen"/>
  </group>

  <!-- Visualizer -->
  <group if="$(arg visualize)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find genz_icp)/rviz/genz_icp_ros1.rviz"/>
  </group>

</launch>
